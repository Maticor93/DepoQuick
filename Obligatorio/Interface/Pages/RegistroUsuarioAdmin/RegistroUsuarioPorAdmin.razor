@page "/registrar-usuario"
@using Controladores
@using Dtos.UsuarioDtos
@layout MainLayout
@inject NavigationManager navManager
@inject Fachada fachada
@inject SesionLogica SesionLogica
<PageTitle>Registrar Usuario</PageTitle>

<div class="container-sm mt-5">
    <div class="card mx-auto" style="max-width: 400px;">
        <div class="card-body">
            <h3 class="card-title text-center">Registrar Usuario</h3>
            <form class="mt-4"  @onsubmit="GuardarCambios">

         
                <div class="row">
                    <div class="col">
                        <label class="form-label" for="nombre">Nombre</label>
                        <input type="text" class="form-control" id="nombre" @bind="_nombre" required>
                    </div>
                    <div class="col">
                        <label class="form-label" for="apellido">Apellido</label>
                        <input type="text" class="form-control" id="apellido" @bind="_apellido" required>
                     
                    </div>
                </div>
                    
                <div class="row-md-4">
                    <label class="form-label" for="correo">Correo</label>
                    <input type="text" class="form-control" id="correo" @bind="_email" required>
                </div>
                  
                <div class="row-md-4">
                    <label class="from-label" for="password">Contrase침a</label>
                    <input type="password" class="form-control" id="password" @bind="_password" required>
                </div>
                <div class="row-md-4">
                    <label class="from-label" for="passwordVerificacion">Verificar contrase침a</label>
                    <input type="password" class="form-control" id="passwordVerificacion" @bind="_passwordVerificacion" required>
                </div>
                @if (!String.IsNullOrEmpty(_mensajeError)){
                    <div class="row alert alert-danger m-0 ">
                        <p class="m-0">
                            @_mensajeError
                        </p>
                    </div>
                }
                @if (!String.IsNullOrEmpty(_mensajeExito)){
                    <div class="row alert alert-success m-0 ">
                        <p class="m-0">
                            @_mensajeExito
                        </p>
                    </div>
                }
                    
                <div class="row m-0 mt-4 pt-0 px-3 align-content-center">
                    <button class="btn btn-primary" type="submit" >Registrarse</button>
                </div>
            </form>
        </div>
    </div>
</div>



@code {
    private String _email;
    private String _nombre;
    private String _apellido;
    private String _password;
    private String _passwordVerificacion;
    private String _mensajeError;
    private String _mensajeExito;

     protected override void OnInitialized()
     {
         if(SesionLogica.EmailUsuarioActual == null) navManager.NavigateTo("/");
         if(!fachada.UsuarioActualEsAdministrador(SesionLogica.EmailUsuarioActual)) navManager.NavigateTo("/home");
         _mensajeError = "";
     }
    
     private void GuardarCambios()
     {
         _mensajeExito = "";
         _mensajeError = "";
         if (!ValidarPasswords(_password, _passwordVerificacion))
         {
             
             _mensajeError = "Las contrase침as deben coincidir";
             return;
         }
         try
         {
             _nombre = _nombre.Trim();
             _apellido = _apellido.Trim();
             if (_nombre.Trim() == "" || _apellido.Trim() == "")
             {
                 _mensajeError = "Los campos nombre y apellido no pueden ser vacios";
                 return;
             }
             
             var nombreCompleto = $"{_nombre} {_apellido}";
             var usuarioRegistroDto = new UsuarioRegistroDto(nombreCompleto, _email, _password);
             fachada.RegistrarUsuario(usuarioRegistroDto);
             _mensajeError = "";
             _mensajeExito = "Usuario registrado con exito";
             VaciarCampos();
         }
         catch(Exception e)
         { 
             Console.WriteLine($"Se a producido una excepci칩n: {e.Message}");
             _mensajeError = e.Message;
         }
     }
     private void IrAInicioSesion()
     {
         navManager.NavigateTo("/");
     }

     private bool ValidarPasswords(String password, String passwordVerificacion)
     {
         return password == passwordVerificacion;
     }

     private void VaciarCampos()
     {
         _nombre = "";
         _apellido = "";
         _email = "";
         _password = "";
         _passwordVerificacion = "";
     }
}